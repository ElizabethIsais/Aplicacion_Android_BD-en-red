package com.example.elizabeth.android_http_2;

import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.ListView;
import android.net.NetworkInfo;
import android.net.ConnectivityManager;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import android.view.View;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import controlador.AnalizadorJSON;
import android.content.Context;

/**
 * Created by Elizabeth on 05/12/2017.
 */

public class ActivityConsultas extends AppCompatActivity {

    public ListView ListViewAlumnos;
    EditText cajaBusqueda;

    ArrayList<String> listaDatos = new ArrayList<String>();

    protected void onCreate(Bundle savedInstanceState){
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_consultas);

        ListViewAlumnos = (ListView)findViewById(R.id.ListViewAlumnos);
        cajaBusqueda = (EditText)findViewById(R.id.cajaBusqueda);

        new ConsultarAlumnos().execute();

        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, listaDatos);

        ListViewAlumnos.setAdapter(adapter);
    }

    /*CÃ³digo agregado     */

    public void consultarRegistro(View v) {
        ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo ni = cm.getActiveNetworkInfo();

        if (ni != null && ni.isConnected()) {
            String nc = cajaBusqueda.getText().toString();

            //Usar una clase interna para que realice la inserccion
            //El metodo execute manda llamar el metodo doInB..
            new ConsultarAlumno().execute(nc);
        }//if
    }//Metodo eliminar registro

    //Clase para generar hilos de ejecucion
    class ConsultarAlumno extends AsyncTask<String, String, String> {

        @Override                      //VarAgrs: Cantidad variable de parametros, recibira los strings que quiera
        //Este metodo es como el run
        protected String doInBackground(String... datos) {

            Map<String, String> registros = new HashMap<String, String>();
            registros.put("nc", datos[0]);

            Log.i("MSJ datos:", Arrays.toString(datos));

            AnalizadorJSON analizadorJSON = new AnalizadorJSON();

            String url2 = "http://10.0.2.2:81/Pruebas_PHP/HTTP_Android/consulta_filtro.php";
            String metodoEnvio ="POST";

            JSONObject jsonObject = analizadorJSON.peticionHTTP2(url2, metodoEnvio, registros);

            Log.i("MSJ JSON: ", jsonObject.toString());

            try {
                JSONArray jsonArray = jsonObject.getJSONArray("alumnos");

                for (int i = 0; i < jsonArray.length(); i++) {
                    String datosA = jsonArray.getJSONObject(i).getString("nc") + "-" +
                            jsonArray.getJSONObject(i).getString("n") + "-" +
                            jsonArray.getJSONObject(i).getString("pa") + "-" +
                            jsonArray.getJSONObject(i).getString("sa") + "-" +
                            jsonArray.getJSONObject(i).getString("e") + "-" +
                            jsonArray.getJSONObject(i).getString("s") + "-" +
                            jsonArray.getJSONObject(i).getString("c");

                    listaDatos.add(datosA);
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
            return null;
        }//Metodo DoIn..

    } //class consultarAlumno


    //////////////////////////////////////
    class ConsultarAlumnos extends AsyncTask<String, String, String> {
        @Override
        protected String doInBackground(String... strings) {
            AnalizadorJSON analizadorJSON = new AnalizadorJSON();

            String url2 = "http://10.0.2.2:81/Pruebas_PHP/HTTP_Android/consulta_alumno.php";

            JSONObject jsonObject = analizadorJSON.peticionHTTP(url2);

            try {
                JSONArray jsonArray = jsonObject.getJSONArray("alumnos");

                for (int i = 0; i < jsonArray.length(); i++) {
                    String datos = jsonArray.getJSONObject(i).getString("nc") + "-" +
                            jsonArray.getJSONObject(i).getString("n") + "-" +
                            jsonArray.getJSONObject(i).getString("pa") + "-" +
                            jsonArray.getJSONObject(i).getString("sa") + "-" +
                            jsonArray.getJSONObject(i).getString("e") + "-" +
                            jsonArray.getJSONObject(i).getString("s") + "-" +
                            jsonArray.getJSONObject(i).getString("c");

                    listaDatos.add(datos);
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
            return null;
        }//Metodo DoIn..
    }//Class Consultar Alumno
}//class ActivityConsultas
